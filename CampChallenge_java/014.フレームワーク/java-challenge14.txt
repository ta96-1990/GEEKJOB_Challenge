Javaで有名もしくは自身で興味のあるフレームワークを3つ以上調べ、そのフレームワークの特徴をまとめて記述しましょう。
※調査内容に規定はありませんが、導入の方法や使い方、特徴など、オリジナルサイトに利用するつもりで調べてみましょう。
※MVCモデルは開発現場では前提知識として知っていて欲しいという知識なので、自分で腑に落ちて納得できるよう仕組みを理解しておきましょう。

Spring Framework
拡張性が高く、オブジェクト指向の基本原則を徹底している
保守性が高くコードをわかりやすくすることができる（クラスに本質的な処理のみを書いて、他を別に書く）
保守性が高いことによってバグや不具合が発生した際の原因特定がしやすくなる
処理を分けて書くことによってプログラムを再利用することが容易になり、効率が上がるのと修正する際も最小限で済むようになる
テストを行うのが容易


Play Framework
javaだけでなくScalaというjavaと親和性の高い言語も使用することができる
軽量さと高い生産性が特徴的
動作時にCPUリソースやメモリ使用量も少ないので、、ハードウェアの負担をおさえたシステムの構築が可能
Rubyの「Ruby on Rails」やPythonの「Django」から大きな影響を受けているので、非常に似た点が多い
学習コストが低い


JavaServer Faces
コンポーネント志向のMVCモデル採用のUIフレームワーク
表示がJSPではなくXHTMLなのでブラウザ表示でデザインの確認がしやすい
実装方法がコンポーネント志向なので狭まるが実装ルールが決まっているので実装ルールに従えばコードの削減や再利用が見込める
開発チームとデザインチームでの分業が行いやすい
